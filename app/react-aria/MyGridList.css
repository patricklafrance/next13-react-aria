.react-aria-GridList {
    --highlight-background: slateblue;
    --highlight-foreground: white;
    --border-color: var(--spectrum-global-color-gray-400);
    --background-color: var(--page-background);
    --text-color: var(--spectrum-alias-text-color);
    --text-color-disabled: var(--spectrum-alias-text-color-disabled);
  
    display: flex;
    flex-direction: column;
    gap: 2px;
    max-height: inherit;
    overflow: auto;
    padding: 4px;
    border: 1px solid var(--border-color);
    border-radius: 6px;
    background: var(--background-color);
    outline: none;
    width: 250px;
    max-height: 300px;
    min-height: 100px;
    box-sizing: border-box;
  
    &[data-empty] {
      align-items: center;
      justify-content: center;
      font-style: italic;
    }
  
    &[data-focus-visible] {
      border-color: var(--highlight-background);
      box-shadow: 0 0 0 1px var(--highlight-background);
    }
  
    .react-aria-Item {
      padding: 0.286rem 0.286rem 0.286rem 0.571rem;
      border-radius: 6px;
      outline: none;
      cursor: default;
      color: var(--text-color);
      font-size: 1.072rem;
      position: relative;
      transform: translateZ(0);
  
      &[data-focus-visible] {
        box-shadow: inset 0 0 0 2px var(--highlight-background);
      }
  
      &[data-pressed] {
        background: var(--spectrum-global-color-gray-200);
      }
  
      &[aria-selected=true] {
        background: var(--highlight-background);
        color: var(--highlight-foreground);
  
        &[data-focus-visible] {
          box-shadow: inset 0 0 0 2px var(--highlight-background), inset 0 0 0 4px var(--highlight-foreground);
        }
  
        .react-aria-Button {
          color: var(--highlight-foreground);
          --focus-ring-color: var(--highlight-foreground);
          --hover-highlight: rgb(255 255 255 / 0.1);
          --active-highlight: rgb(255 255 255 / 0.2);
        }
      }
  
      &[aria-disabled] {
        color: var(--text-color-disabled);
      }
  
      [role=gridcell] {
        display: flex;
        align-items: center;
        gap: 0.571rem;
        min-height: 28px;
      }
  
      .react-aria-Button:not([slot]) {
        margin-left: auto;
      }
    }
  
    /* join selected items if :has selector is supported */
    @supports selector(:has(.foo)) {
      gap: 0;
  
      .react-aria-Item[aria-selected=true]:has(+ [aria-selected=true]),
      .react-aria-Item[aria-selected=true]:has(+ .react-aria-DropIndicator + [aria-selected=true]) {
        border-end-start-radius: 0;
        border-end-end-radius: 0;
      }
  
      .react-aria-Item[aria-selected=true] + [aria-selected=true],
      .react-aria-Item[aria-selected=true] + .react-aria-DropIndicator + [aria-selected=true] {
        border-start-start-radius: 0;
        border-start-end-radius: 0;
      }
    }
  }
  
  .react-aria-Checkbox {
    --deselected-color: gray;
    --deselected-color-pressed: dimgray;
    --selected-color: white;
    --selected-color-pressed: #ddd;
    --checkmark-color: slateblue;
    --focus-ring-color: slateblue;
  
    width: 1rem;
    height: 1rem;
    border: 2px solid var(--deselected-color);
    border-radius: 4px;
    transition: all 200ms;
    display: flex;
    align-items: center;
    justify-content: center;
  
    & svg {
      width: 0.857rem;
      height: 0.857rem;
      fill: none;
      stroke: var(--checkmark-color);
      stroke-width: 3px;
      stroke-dasharray: 22px;
      stroke-dashoffset: 66;
      transition: all 200ms;
    }
  
    &[data-focus-visible] {
      box-shadow: 0 0 0 2px var(--spectrum-alias-background-color-default), 0 0 0 4px var(--focus-ring-color);
    }
  
    &[data-pressed] {
      border-color: var(--deselected-color-pressed);
    }
  
    &[data-selected] {
      border-color: var(--selected-color);
      background: var(--selected-color);
  
      &[data-pressed] {
        border-color: var(--selected-color-pressed);
        background: var(--selected-color-pressed);
      }
  
      &[data-focus-visible] {
        box-shadow: 0 0 0 2px var(--focus-ring-color), 0 0 0 4px var(--selected-color);
      }
  
      & svg {
        stroke-dashoffset: 44;
      }
    }
  
    &[data-disabled] {
      opacity: 0.4;
    }
  }
  
  .react-aria-Button {
    background: transparent;
    border: none;
    border-radius: 4px;
    appearance: none;
    vertical-align: middle;
    font-size: 1.2rem;
    text-align: center;
    line-height: 1.2em;
    margin: 0;
    outline: none;
    padding: 0.286rem 0.429rem;
    transition: background 200ms;
    color: var(--spectrum-alias-text-color);
    --focus-ring-color: slateblue;
    --hover-highlight: var(--spectrum-alias-highlight-hover);
    --active-highlight: var(--spectrum-alias-highlight-active);
  
    &[data-hovered] {
      background: var(--hover-highlight);
    }
  
    &[data-pressed] {
      background: var(--active-highlight);
    }
  
    &[data-focus-visible] {
      box-shadow: 0 0 0 2px var(--focus-ring-color);
    }
  }
  
  @media (forced-colors: active) {
    .react-aria-GridList {
      forced-color-adjust: none;
  
      --highlight-background: Highlight;
      --highlight-foreground: HighlightText;
      --border-color: ButtonBorder;
      --background-color: ButtonFace;
      --text-color: ButtonText;
      --text-color-disabled: GrayText;
    }
  
    .react-aria-Checkbox {
      forced-color-adjust: none;
  
      --deselected-color: ButtonBorder;
      --deselected-color-pressed: ButtonBorder;
      --selected-color: ButtonFace;
      --selected-color-pressed: ButtonFace;
      --checkmark-color: ButtonText;
      --spectrum-alias-background-color-default: Canvas;
      --focus-ring-color: Highlight;
  
      &[data-disabled] {
        opacity: 1;
        --deselected-color: GrayText;
        --selected-color: GrayText;
      }
    }
  
    .react-aria-Button {
      forced-color-adjust: none;
      --focus-ring-color: Highlight;
    }
  }